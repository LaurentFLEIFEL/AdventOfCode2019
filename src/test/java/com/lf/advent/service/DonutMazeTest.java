package com.lf.advent.service;

import org.assertj.core.api.Assertions;
import org.eclipse.collections.api.factory.Lists;
import org.junit.Test;

import java.util.List;

public class DonutMazeTest {

    @Test
    public void test1() {
        //Given
        List<String> lines = Lists.mutable.of("         A           ",
                                              "         A           ",
                                              "  #######.#########  ",
                                              "  #######.........#  ",
                                              "  #######.#######.#  ",
                                              "  #######.#######.#  ",
                                              "  #######.#######.#  ",
                                              "  #####  B    ###.#  ",
                                              "BC...##  C    ###.#  ",
                                              "  ##.##       ###.#  ",
                                              "  ##...DE  F  ###.#  ",
                                              "  #####    G  ###.#  ",
                                              "  #########.#####.#  ",
                                              "DE..#######...###.#  ",
                                              "  #.#########.###.#  ",
                                              "FG..#########.....#  ",
                                              "  ###########.#####  ",
                                              "             Z       ",
                                              "             Z       ");

        //When
        DonutMaze service = new DonutMaze();
        service.consume(lines);

        //Then
        Assertions.assertThat(service.pathSize()).isEqualTo(23);
    }

    @Test
    public void test2() {
        //Given
        List<String> lines = Lists.mutable.of("                   A               ",
                                              "                   A               ",
                                              "  #################.#############  ",
                                              "  #.#...#...................#.#.#  ",
                                              "  #.#.#.###.###.###.#########.#.#  ",
                                              "  #.#.#.......#...#.....#.#.#...#  ",
                                              "  #.#########.###.#####.#.#.###.#  ",
                                              "  #.............#.#.....#.......#  ",
                                              "  ###.###########.###.#####.#.#.#  ",
                                              "  #.....#        A   C    #.#.#.#  ",
                                              "  #######        S   P    #####.#  ",
                                              "  #.#...#                 #......VT",
                                              "  #.#.#.#                 #.#####  ",
                                              "  #...#.#               YN....#.#  ",
                                              "  #.###.#                 #####.#  ",
                                              "DI....#.#                 #.....#  ",
                                              "  #####.#                 #.###.#  ",
                                              "ZZ......#               QG....#..AS",
                                              "  ###.###                 #######  ",
                                              "JO..#.#.#                 #.....#  ",
                                              "  #.#.#.#                 ###.#.#  ",
                                              "  #...#..DI             BU....#..LF",
                                              "  #####.#                 #.#####  ",
                                              "YN......#               VT..#....QG",
                                              "  #.###.#                 #.###.#  ",
                                              "  #.#...#                 #.....#  ",
                                              "  ###.###    J L     J    #.#.###  ",
                                              "  #.....#    O F     P    #.#...#  ",
                                              "  #.###.#####.#.#####.#####.###.#  ",
                                              "  #...#.#.#...#.....#.....#.#...#  ",
                                              "  #.#####.###.###.#.#.#########.#  ",
                                              "  #...#.#.....#...#.#.#.#.....#.#  ",
                                              "  #.###.#####.###.###.#.#.#######  ",
                                              "  #.#.........#...#.............#  ",
                                              "  #########.###.###.#############  ",
                                              "           B   J   C               ",
                                              "           U   P   P               ");

        //When
        DonutMaze service = new DonutMaze();
        service.consume(lines);

        //Then
        Assertions.assertThat(service.pathSize()).isEqualTo(58);
    }

    @Test
    public void test_2_1() {
        //Given
        List<String> lines = Lists.mutable.of("             Z L X W       C                 ",
                                              "             Z P Q B       K                 ",
                                              "  ###########.#.#.#.#######.###############  ",
                                              "  #...#.......#.#.......#.#.......#.#.#...#  ",
                                              "  ###.#.#.#.#.#.#.#.###.#.#.#######.#.#.###  ",
                                              "  #.#...#.#.#...#.#.#...#...#...#.#.......#  ",
                                              "  #.###.#######.###.###.#.###.###.#.#######  ",
                                              "  #...#.......#.#...#...#.............#...#  ",
                                              "  #.#########.#######.#.#######.#######.###  ",
                                              "  #...#.#    F       R I       Z    #.#.#.#  ",
                                              "  #.###.#    D       E C       H    #.#.#.#  ",
                                              "  #.#...#                           #...#.#  ",
                                              "  #.###.#                           #.###.#  ",
                                              "  #.#....OA                       WB..#.#..ZH",
                                              "  #.###.#                           #.#.#.#  ",
                                              "CJ......#                           #.....#  ",
                                              "  #######                           #######  ",
                                              "  #.#....CK                         #......IC",
                                              "  #.###.#                           #.###.#  ",
                                              "  #.....#                           #...#.#  ",
                                              "  ###.###                           #.#.#.#  ",
                                              "XF....#.#                         RF..#.#.#  ",
                                              "  #####.#                           #######  ",
                                              "  #......CJ                       NM..#...#  ",
                                              "  ###.#.#                           #.###.#  ",
                                              "RE....#.#                           #......RF",
                                              "  ###.###        X   X       L      #.#.#.#  ",
                                              "  #.....#        F   Q       P      #.#.#.#  ",
                                              "  ###.###########.###.#######.#########.###  ",
                                              "  #.....#...#.....#.......#...#.....#.#...#  ",
                                              "  #####.#.###.#######.#######.###.###.#.#.#  ",
                                              "  #.......#.......#.#.#.#.#...#...#...#.#.#  ",
                                              "  #####.###.#####.#.#.#.#.###.###.#.###.###  ",
                                              "  #.......#.....#.#...#...............#...#  ",
                                              "  #############.#.#.###.###################  ",
                                              "               A O F   N                     ",
                                              "               A A D   M                     ");

        //When
        DonutMaze service = new DonutMaze();
        service.consume(lines);

        //Then
        Assertions.assertThat(service.pathSize()).isEqualTo(396);
    }
}